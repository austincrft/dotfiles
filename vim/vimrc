" Use Vim settings, rather then Vi settings
" This must be first, because it changes other options as a side effect
set nocompatible

" ------------------------------------------------------------------------------
" General Config
" ------------------------------------------------------------------------------
set number                     " Line numbers
set relativenumber             " Relative numbering
set backspace=indent,eol,start " Allow backspace in insert mode
set history=1000               " Store lots of :cmdline history
set showcmd                    " Show incomplete cmds down the bottom
set showmode                   " Show current mode down the bottom
set visualbell                 " No sounds
set autoread                   " Reload files changed outside vim
set hidden                     " Allow buffers to exist in background
set noswapfile                 " No swap file
set nobackup                   " No backup
set nowb                       " No write-backup
set laststatus=2               " Always show statusline
set t_Co=16                    " Set terminal color to 16
set textwidth=80               " Text-width to 80 columns
set colorcolumn=80             " Highlight column 80
set cursorline                 " Highlight current line
set completeopt=menuone        " Complete option (don't show preview)
syntax on                      " Turn on syntax
syntax enable                  " Enable syntax
autocmd FocusLost * silent! wa " Automatically save file

" ------------------------------------------------------------------------------
" Indentation and Linebreaks
" ------------------------------------------------------------------------------
set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
set nowrap
set linebreak

" ------------------------------------------------------------------------------
" Search Config
" ------------------------------------------------------------------------------
set hlsearch
set incsearch
set ignorecase
set smartcase

" ------------------------------------------------------------------------------
"  Set ESC and Leader
" ------------------------------------------------------------------------------
imap jj <Esc>
let mapleader = ' '

" ------------------------------------------------------------------------------
" Core Mappings
" ------------------------------------------------------------------------------
nnoremap <S-Tab> :bnext<CR>| " Fast buffer navigation
vnoremap * "zy/<C-R>z<CR>|   " Search for visual selection using z-register

" ------------------------------------------------------------------------------
"  Configure Directories
" ------------------------------------------------------------------------------
set runtimepath=$HOME/.vim,$VIMRUNTIME

" ------------------------------------------------------------------------------
" Persistent Undo -- Keep undo history across sessions by storing in file
" ------------------------------------------------------------------------------
if has('persistent_undo')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

" ------------------------------------------------------------------------------
" ConEmu Config
" ------------------------------------------------------------------------------
if !empty($CONEMUBUILD)
    set term=xterm
    set termencoding=utf8
    set t_Co=16
    let &t_AB="\e[48;5;%dm"
    let &t_AF="\e[38;5;%dm"
endif

" ------------------------------------------------------------------------------
" Vundle Config
" ------------------------------------------------------------------------------
filetype off

" Install Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Editor features
Plugin 'jiangmiao/auto-pairs'
Plugin 'tomtom/tcomment_vim.git'
Plugin 'tpope/vim-surround'

" File browsing
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'jeetsukumaran/vim-filebeagle'
Plugin 'rking/ag.vim'

" Formatting
Plugin 'godlygeek/tabular'
Plugin 'ntpeters/vim-better-whitespace'

" Linting
Plugin 'scrooloose/syntastic'

" Git
Plugin 'airblade/vim-gitgutter'
Plugin 'tpope/vim-fugitive'

" Auto-Complete
Plugin 'Valloric/YouCompleteMe'

" Clojure
Plugin 'tpope/vim-fireplace'
Plugin 'vim-scripts/paredit.vim'

" CSharp
Plugin 'OrangeT/vim-csharp'

" Tools
Plugin 'KabbAmine/zeavim.vim'
Plugin 'amiorin/vim-project'
Plugin 'kshenoy/vim-signature'
Plugin 'tpope/vim-dispatch'
Plugin 'vim-scripts/BufOnly.vim'
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-notes'

" Visuals
Plugin 'altercation/vim-colors-solarized'
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

call vundle#end()            " Required
filetype plugin indent on    " Required

" ------------------------------------------------------------------------------
" Ag Config
" ------------------------------------------------------------------------------
let g:ag_prg="ag --vimgrep --ignore tags"

" ------------------------------------------------------------------------------
" Airline Config
" ------------------------------------------------------------------------------
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#hunks#enabled = 0
let g:airline_powerline_fonts = 1

" ------------------------------------------------------------------------------
" CtrlP Config
" ------------------------------------------------------------------------------
let g:ctrlp_working_path_mode='a'

" ------------------------------------------------------------------------------
" FileBeagle Config
" ------------------------------------------------------------------------------
let g:filebeagle_suppress_keymaps = 1

" ------------------------------------------------------------------------------
" GitGutter Config
" ------------------------------------------------------------------------------
let g:gitgutter_map_keys=0 " Disable keymappings

" ------------------------------------------------------------------------------
" Notes Config
" ------------------------------------------------------------------------------
let g:notes_directories = ['~/Dropbox/vim-notes']

" ------------------------------------------------------------------------------
" Paredit Config
" ------------------------------------------------------------------------------
let g:paredit_electric_return=0

" ------------------------------------------------------------------------------
" Signature Config
" ------------------------------------------------------------------------------
let g:SignatureMarkTextHLDynamic=1
let g:SignatureMarkerTextHLDynamic=1

" ------------------------------------------------------------------------------
" Solarized Theme
" ------------------------------------------------------------------------------
set background=dark
colorscheme solarized

" ------------------------------------------------------------------------------
" Syntastic Config
" ------------------------------------------------------------------------------
let g:syntastic_always_populate_loc_list = 1

"  ------------------------------------------------------------------------------
" TComment Config
" ------------------------------------------------------------------------------
let g:tcommentMaps=0                          " Disable keymappings
nmap gcc :TComment<CR>|                       " Comment line
vmap gc :TComment<CR>|                        " Comment selection

" ------------------------------------------------------------------------------
" YouCompleteMe Config
" ------------------------------------------------------------------------------
let g:ycm_server_keep_logfiles = 1
if has('win32')
  let g:ycm_path_to_python_interpreter = 'C:\Python35\python.exe'
else
  let g:ycm_path_to_python_interpreter = 'python'
end

" ------------------------------------------------------------------------------
" Leader Mappings
" ------------------------------------------------------------------------------

" Buffer
nnoremap <leader><Tab> :e#<CR>|                          " Switch to last buffer
nnoremap <leader>bb :CtrlPBuffer<CR>|                    " List
nnoremap <leader>bn :bnext<CR>|                          " Next
nnoremap <leader>bp :bprevious<CR>|                      " Previous
nnoremap <leader>bd :bdelete<CR>|                        " Delete
nnoremap <leader>bo :BufOnly<CR>|                        " Delete inactive buffers

" Folding
nnoremap <leader>ff za|                                  " Toggle current fold
nnoremap <leader>fa zM|                                  " Close all folds
nnoremap <leader>fo zR|                                  " Open all folds
nnoremap <leader>fv zv|                                  " View cursor line

" Formatting
nnoremap <leader>Fa :setlocal formatoptions+=a<CR>|      " Activate auto-format
nnoremap <leader>FA :setlocal formatoptions-=a<CR>|      " Disable auto-format
nnoremap <leader>Fu yyp<C-V>$r-|                         " Underline line
vnoremap <leader>Fs :'<,'>sort<CR>|                      " Sort lines
vnoremap <leader>Fw gq|                                  " Wrap lines at textwidth
nnoremap <leader>FW :StripWhitespace<CR>|                " Strip Whitespace

" Git
nnoremap <leader>gdn :GitGutterNextHunk<CR>|             " Jump to next diff
nnoremap <leader>gdp :GitGutterPrevHunk<CR>|             " Jump to previous diff
nnoremap <leader>gdt :GitGutterToggle<CR>|               " Toggle git-gutter

" Linting (Errors)
nnoremap <leader>ec :SyntasticCheck<CR>|                 " Error check
nnoremap <leader>et :SyntasticToggleMode<CR>|            " Toggle syntastic
nnoremap <leader>eo :lopen<CR>|                          " Open
nnoremap <leader>ec :lclose<CR>|                         " Close
nnoremap <leader>en :lnext<CR>|                          " Next
nnoremap <leader>ep :lprevious<CR>|                      " Previous

" Meta
nnoremap <leader>_d :e $MYVIMRC<CR>|                     " Edit .vimrc
nnoremap <leader>_r :source $MYVIMRC<CR>|                " Reload .vimrc
nnoremap <leader>_f :FileBeagle ~/.vim/ftplugin<CR>|     " Open ftplugins

" Make
nnoremap <leader>mm :Make<CR>|                           " Make

" Notes
nnoremap <leader>nn :Note<space>|                        " Open note
nnoremap <leader>nD :DeleteNote<CR>|                     " Delete note
nnoremap <leader>ns :SearchNotes<space>|                 " Delete note

" Project
nnoremap <leader>pt :FileBeagle<CR>|                     " Open cwd
nnoremap <leader>pF :FileBeagleBufferDir<CR>|            " Open buffer directory
nnoremap <leader>pf :CtrlP<CR>|                          " Fuzzy-search files
nnoremap <leader>ps :Ag<space>|                          " Pattern-search files
nnoremap <leader>pc :pclose<CR>|                         " Close preview-window
nnoremap <leader>pT :Start! ctags -R<CR>|                " Async ctags generate

" Quickfix
nnoremap <leader>co :botright copen<CR>|                 " Open (full width)
nnoremap <leader>cc :cclose<CR>|                         " Close
nnoremap <leader>cn :cnext<CR>|                          " Next
nnoremap <leader>cp :cprevious<CR>|                      " Previous

" Substitute
nnoremap <leader>ss :%s/|                                " Substitute
nnoremap <leader>st :%s/\t/|                             " Substitite tabs

" Spelling
nnoremap <leader>Ss :setlocal spell spelllang=en_us<CR>| " Activate spelling
nnoremap <leader>SS :setlocal nospell<CR>|               " Disable spelling
nnoremap <leader>Sf z=|                                  " Fix word

" Tags
nnoremap <leader>tt :CtrlPTag<CR>|                       " Fuzzy-search tags
nnoremap <leader>ts :tselect<CR>|                        " View list
nnoremap <leader>tn :tnext<CR>|                          " Next
nnoremap <leader>tp :tprev<CR>|                          " Previous
nnoremap <leader>tf :tfirst<CR>|                         " First
nnoremap <leader>tl :tlast<CR>|                          " Last

" Windows
nnoremap <leader>wv :vsplit<CR>|                         " Split vertically
nnoremap <leader>wh :split<CR>|                          " Split horizontally
nnoremap <leader>wq <C-w>q|                              " Quit
nnoremap <leader>h <C-w>h|                               " Navigate left
nnoremap <leader>j <C-w>j|                               " Navigate down
nnoremap <leader>k <C-w>k|                               " Navigate up
nnoremap <leader>l <C-w>l|                               " Navigate right

" ------------------------------------------------------------------------------
" Project Config
" ------------------------------------------------------------------------------
if isdirectory($HOME . "/.vim/bundle/vim-project")
  set rtp+=~/.vim/bundle/vim-project/
  call project#rc('/src')

  " Get work projects if the file exists
  if filereadable($HOME . "/.vim/work/projects.vim")
    source ~/.vim/work/projects.vim
  end
end
